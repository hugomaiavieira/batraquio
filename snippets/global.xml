<?xml version='1.0' encoding='utf-8'?>
<snippets>
  <snippet>
    <text><![CDATA[$<
#coding:utf8

import re

class WhiteSpacesError(Exception): pass
class DifferentNumberOfColumnsError(Exception): pass

class Table(object):

    def __init__(self, text):
        text = text.decode('utf-8')
        if re.match(r'^\s*$', text): raise WhiteSpacesError

        self.lines_str = self.text_to_lines(text)

        self.columns_number = self.get_columns_number()

        self.tabulation = self.get_tabulations()
        self.lines_list = self.line_items()
        self.columns = self.size_of_columns()


    def get_columns_number(self):
        pipes_number = self.lines_str[0].count('|')
        for line in self.lines_str:
            if line.count('|') != pipes_number:
                raise DifferentNumberOfColumnsError
        columns_number = pipes_number - 1
        return columns_number



    def text_to_lines(self, text):
        lines = text.split('\n')
        white = re.compile(r'^\s*$')

        # del internal empty lines
        i=0
        while i < len(lines):
            if re.match(white, lines[i]):
                del lines[i]
            i+=1

        if re.match(white, lines[0]): lines = lines[1:] # del first empty line
        if re.match(white, lines[-1]): lines = lines[:-1] # del last empty line

        return lines

    def get_tabulations(self):
        tabulation = []
        for line in self.lines_str:
            tabulation.append(re.search(r'\s*', line).group())
        return tabulation

    def size_of_columns(self):
        number_of_columns = len(self.lines_list[0])
        columns = []
        for number in range(number_of_columns):
            columns.append(0)

        for line in self.lines_list:
            i=0
            for item in line:
                if len(item).__cmp__(columns[i]) == 1: # test if are greater than
                    columns[i] = len(item)
                i+=1
        return columns


    def line_items(self):
        line_items = []
        for line in self.lines_str:
            line = line.split('|')
            line = line[1:-1] # del first and last empty item (consequence of split)
            items=[]
            for item in line:
                i = re.search(r'(\S+([ \t]+\S+)*)+', item)
                if i:
                    items.append(i.group())
                else:
                    items.append(" ")
            line_items.append(items)
        return line_items


    def organize(self):
        text = ""
        i=0
        for line in self.lines_list:
            text += self.tabulation[i]
            for index in range(len(self.columns)):
                text += '| ' + line[index] + (self.columns[index] - len(line[index]))*' ' + ' '
            text += '|\n'
            i+=1
        text = text[:-1] # del the last \n
        return text

try:
    table = Table($GEDIT_SELECTED_TEXT)
    return table.organize()
except DifferentNumberOfColumnsError:
    return $GEDIT_SELECTED_TEXT + "\nDifferent number of columns. Fix this and try again."
except WhiteSpacesError:
    return $GEDIT_SELECTED_TEXT
>]]></text>
    <accelerator><![CDATA[<Shift><Control>f]]></accelerator>
    <description>Align Table</description>
  </snippet>
  <snippet>
    <text><![CDATA[The MIT License

Copyright (c) ${1:year} ${2:copyright holders}

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to
deal in the Software without restriction, including without limitation the
rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
sell copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
IN THE SOFTWARE.]]></text>
    <tag>mit</tag>
    <description>MIT License</description>
  </snippet>
  <snippet>
    <text><![CDATA[Copyright (c) ${1:YEAR}, ${2:OWNER}
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

  - Redistributions of source code must retain the above copyright notice,
    this list of conditions and the following disclaimer.
  - Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
  - Neither the name of the ${3:ORGANIZATION} nor the names of its contributors
    may be used to endorse or promote products derived from this software
    without specific prior written permission.
    
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.]]></text>
    <tag>bsd</tag>
    <description>BSD License</description>
  </snippet>
  <snippet>
    <text><![CDATA[Copyright (c) ${1:year} ${2:name of author}

This program is Free Software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the Free
Software Foundation; either version 2 of the License, or (at your option)
any later version.

This program is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place - Suite 330, Boston, MA  02111-1307, USA.]]></text>
    <tag>gpltwo</tag>
    <description>GPL2 License</description>
  </snippet>
  <snippet>
    <text><![CDATA[Copyright (c) ${1:year} ${2:name of author}

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.]]></text>
    <tag>gplthree</tag>
    <description>New snippet</description>
  </snippet>
</snippets>
